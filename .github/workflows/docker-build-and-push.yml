name: image build and push

on:
  push:
    branches:
      - "main"
    paths:
      - Dockerfile
      - .github/workflows/docker-build-and-push.yml

env:
  IMAGE_NAME: "simaofsilva/drone-runner-docker"
  RUNNER_VERSION: "v1.8.3" # renovate: datasource=github-tags depName=drone-runners/drone-runner-docker
  TMATE_VERSION: "2.4.0" # renovate: datasource=github-tags depName=tmate-io/tmate

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    env:
      ARCH: amd64
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2

      - name: Login to DockerHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # v3
        with:
          context: .
          platforms: linux/${{ env.ARCH }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-${{ env.ARCH }}
          file: Dockerfile
          build-args: |
            RUNNER_VERSION=${{ env.RUNNER_VERSION }}
            TMATE_VERSION=${{ env.TMATE_VERSION }}
            ARCH=${{ env.ARCH }}

  build-arm32v6:
    runs-on: ubuntu-latest
    env:
      ARCH: arm
      VARIANT: v6
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2

      - name: Login to DockerHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # v3
        with:
          context: .
          platforms: linux/arm/${{ env.VARIANT }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-${{ env.ARCH }}32${{ env.VARIANT }}
          file: Dockerfile
          build-args: |
            RUNNER_VERSION=${{ env.RUNNER_VERSION }}
            TMATE_VERSION=${{ env.TMATE_VERSION }}
            ARCH=${{ env.ARCH }}
            ARCH_AUX=32
            VARIANT=${{ env.VARIANT }}

  build-arm32v7:
    runs-on: ubuntu-latest
    env:
      ARCH: arm
      VARIANT: v7
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2

      - name: Login to DockerHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # v3
        with:
          context: .
          platforms: linux/arm/${{ env.VARIANT }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-${{ env.ARCH }}32${{ env.VARIANT }}
          file: Dockerfile
          build-args: |
            RUNNER_VERSION=${{ env.RUNNER_VERSION }}
            TMATE_VERSION=${{ env.TMATE_VERSION }}
            ARCH=${{ env.ARCH }}
            ARCH_AUX=32
            VARIANT=${{ env.VARIANT }}

  build-arm64:
    runs-on: ubuntu-latest
    env:
      ARCH: arm64
      VARIANT: v8
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2

      - name: Login to DockerHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # v3
        with:
          context: .
          platforms: linux/${{ env.ARCH }}/${{ env.VARIANT }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-${{ env.ARCH }}
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-${{ env.ARCH }}${{ env.VARIANT }}
          file: Dockerfile
          build-args: |
            RUNNER_VERSION=${{ env.RUNNER_VERSION }}
            TMATE_VERSION=${{ env.TMATE_VERSION }}
            ARCH=${{ env.ARCH }}
            VARIANT=${{ env.VARIANT }}

  build-manifest:
    needs: [build-amd64, build-arm32v6, build-arm32v7, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: create manifest for version ${{ env.RUNNER_VERSION }}
        run: |
          DOCKER_CLI_EXPERIMENTAL=enabled \
          docker manifest create --amend ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }} \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-amd64 \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm64v8 \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v7 \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v6

      - name: push manifest for version ${{ env.RUNNER_VERSION }}
        run: |
          DOCKER_CLI_EXPERIMENTAL=enabled \
          docker manifest push ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}

      - name: create manifest for linux version
        run: |
          DOCKER_CLI_EXPERIMENTAL=enabled \
          docker manifest create --amend ${{ env.IMAGE_NAME }}:linux \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-amd64 \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm64v8 \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v7 \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v6

      - name: push manifest for linux version
        run: |
          DOCKER_CLI_EXPERIMENTAL=enabled \
          docker manifest push ${{ env.IMAGE_NAME }}:linux

      - name: create manifest for latest version
        run: |
          DOCKER_CLI_EXPERIMENTAL=enabled \
          docker manifest create --amend ${{ env.IMAGE_NAME }}:latest \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-amd64 \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm64v8 \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v7 \
             ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v6

      - name: push manifest for latest version
        run: |
          DOCKER_CLI_EXPERIMENTAL=enabled \
          docker manifest push ${{ env.IMAGE_NAME }}:latest
