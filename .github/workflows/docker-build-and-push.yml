name: image build and push

on:
  push:
    branches:
      - "main"
    paths:
      - Dockerfile
      - .github/workflows/docker-build-and-push.yml

env:
  IMAGE_NAME: "simaofsilva/drone-runner-docker"
  RUNNER_VERSION: "v1.8.3" # renovate: datasource=github-tags depName=drone-runners/drone-runner-docker
  TMATE_VERSION: "2.4.0" # renovate: datasource=github-tags depName=tmate-io/tmate

jobs:
  build-base-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - arm/v6
          - arm/v7
          - arm64
          - amd64
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Login to DockerHub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set docker build args
        id: build_args
        run: |
          if [ $(echo "${{ matrix.platform }}" | grep -F "arm/") ]; then

            echo "arch=arm" >> $GITHUB_OUTPUT
            echo "arch_aux=32" >> $GITHUB_OUTPUT

            if [ "${{ matrix.platform }}" == "arm/v6" ]; then
              echo "variant=v6" >> $GITHUB_OUTPUT
            elif [ "${{ matrix.platform }}" == "arm/v7" ]; then
              echo "variant=v7" >> $GITHUB_OUTPUT
            fi

          elif [ "${{ matrix.platform }}" == "arm64" ]; then
            echo "arch=arm64" >> $GITHUB_OUTPUT
            echo "variant=v8" >> $GITHUB_OUTPUT

          else
            echo "arch=amd64" >> $GITHUB_OUTPUT
          fi

      - name: Normalise tags
        id: normalise_tags
        run: |
          if [ "${{ matrix.platform }}" == "arm/v6" ]; then
            echo "TAGS=arm32v6" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.platform }}" == "arm/v7" ]; then
            echo "TAGS=arm32v7" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.platform }}" == "arm64" ]; then
            echo "TAGS=arm64" >> $GITHUB_OUTPUT
          else
            echo "TAGS=${{ matrix.platform }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push
        uses: docker/build-push-action@16ebe778df0e7752d2cfcbd924afdbbd89c1a755 # v6.6.1
        with:
          context: .
          platforms: linux/${{ matrix.platform }}
          push: true
          provenance: false
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-${{ steps.normalise_tags.outputs.TAGS }}
          file: Dockerfile
          build-args: |
            RUNNER_VERSION=${{ env.RUNNER_VERSION }}
            TMATE_VERSION=${{ env.TMATE_VERSION }}
            ARCH=${{ steps.build_args.outputs.arch }}
            ARCH_AUX=${{ steps.build_args.outputs.arch_aux }}
            VARIANT=${{ steps.build_args.outputs.variant }}

  build-manifest:
    needs:
      - build-base-images
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup crane
        uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4

      - name: Create tag "arm64v8"
        run: |
          crane tag ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm64 ${{ env.RUNNER_VERSION }}-linux-arm64v8

      - name: Create manifest for tag "${{ env.RUNNER_VERSION }}"
        run: |
          docker manifest create --amend ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }} \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-amd64 \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm64v8 \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v7 \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v6

      - name: Push manifest for tag "${{ env.RUNNER_VERSION }}"
        run: |
          docker manifest push ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}

      - name: Create manifest for tag "linux"
        run: |
          docker manifest create --amend ${{ env.IMAGE_NAME }}:linux \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-amd64 \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm64v8 \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v7 \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v6

      - name: Push manifest for tag "linux"
        run: |
          docker manifest push ${{ env.IMAGE_NAME }}:linux

      - name: Create manifest for tag "latest"
        run: |
          docker manifest create --amend ${{ env.IMAGE_NAME }}:latest \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-amd64 \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm64v8 \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v7 \
            ${{ env.IMAGE_NAME }}:${{ env.RUNNER_VERSION }}-linux-arm32v6

      - name: Push manifest for tag "latest"
        run: |
          docker manifest push ${{ env.IMAGE_NAME }}:latest
